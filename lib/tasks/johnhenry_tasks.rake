namespace :johnhenry do
  desc 'Install dependencies and references.'
  task :install do
    Rails.logger = Logger.new(STDOUT)

    quit_if_already_installed
    install_layout
    maybe_remove_old_layout
    update_gemfile
    update_routes
    install_javascript
    install_stylesheets
    install_stripe

    success_message
  end

  def quit_if_already_installed
    token = 'BEGIN autogenerated by JohnHenryRails'.freeze
    if File.read(File.join(Rails.root, *%w(Gemfile))).include?(token)
      message = "JohnHenry has already been installed."
      Rails.logger.error message
      fail message
    end
  end

  def johnhenry_root
    @_johnhenry_root ||= Gem.loaded_specs['johnhenry'].full_gem_path.freeze
  end

  def install_layout
    source = File.join(johnhenry_root, *%w(app views layouts johnhenry application.html.haml))
    target = File.join(Rails.root, *%w(app views layouts application.html.haml))

    Rails.logger.info "Copying application.html.haml..."
    FileUtils.cp(source, target)
  end

  def maybe_remove_old_layout
    layout_erb = File.join(Rails.root, *%w(app views layouts application.html.erb))
    if File.exists?(layout_erb)
      Rails.logger.info "Removing application.html.erb..."
      FileUtils.rm(layout_erb)
    end
  end

  def update_gemfile
    source = File.join(johnhenry_root, *%w(lib Gemfile))
    target = File.join(Rails.root, *%w(Gemfile))

    gemfile_lines_to_insert = File.readlines(source)
    gemfile_lines = File.readlines(target).reject do |line|
      line =~ /(sqlite3|turbolinks)/
    end
    gemfile = gemfile_lines[0..5] + gemfile_lines_to_insert + gemfile_lines[5..-1]
    Rails.logger.info "Inserting gems into Gemfile and removing turbolinks..."
    File.open(target, 'w') { |f| f.write gemfile.join("") }
  end

  def install_javascript
    source = File.join(Rails.root, *%w(app assets javascripts application.js))
    application_js = File.readlines(source)
    File.open(source, 'w') do |f|
      # replace turbolinks with johnhenry/application
      app = application_js[0..13] +
            ["//= require johnhenry/application\n"] +
            application_js[15..-1]
      Rails.logger.info "Adding dependencies to application.js..."
      f.write(app.join(""))
    end
  end

  def install_stylesheets
    source = File.join(Rails.root, *%w(app assets stylesheets application.css))
    application_css = File.readlines(source)
    File.open(source, 'w') do |f|
      app = application_css[0..11] +
            [" *= require johnhenry/application\n"] +
            application_css[12..-1]
      Rails.logger.info "Adding dependencies to application.css..."
      f.write(app.join(""))
    end
  end

  def install_stripe
    target = File.join(Rails.root, *%w(config initializers stripe.rb))
    File.open(target, 'w') do |f|
      Rails.logger.info "Creating config/initializers/stripe.rb..."
      f.write("Stripe.api_key = ENV['STRIPE_SECRET_KEY']\n")
      f.write("STRIPE_PUBLISHABLE_KEY = ENV['STRIPE_PUBLISHABLE_KEY']\n")
    end
  end

  def update_routes
    source = File.join(Rails.root, *%w(config routes.rb))
    routes_rb = File.readlines(source)
    File.open(source, 'w') do |f|
      f.write(routes_rb[0])
      f.write(<<-EOS)
root 'johnhenry/home#welcome'
devise_for :users, controllers: {
    registrations: 'johnhenry/registrations',
      sessions: 'johnhenry/sessions'
}
resources :payments, controller: 'johnhenry/payments'
      EOS
      Rails.logger.info "Injecting routes into config/routes.rb..."
      f.write(routes_rb[1..-1].join(''))
    end
  end

  def success_message
    git_command = %w().join(' ')

    Rails.logger.info <<-EOS

      Installation complete! If you're using git, you should:

        git add app config Gemfile*
        git rm app/views/layouts/application.html.erb

      You can check out the demo page:
        bundle exec rails server

      and loading in your browser:
        http://localhost:3000
    EOS
  end
end
